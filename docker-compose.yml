version: "3.9"
services:
  rabbit:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 3s
      timeout: 10s
      retries: 5
      start_period: 3s

  keycloak:
    image: jboss/keycloak
    ports:
      - 8080:8080
    volumes:
      - ./imports:/opt/jboss/keycloak/imports
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-export.json
    healthcheck:
      test: curl --fail http://localhost:8080/auth || exit 1
      interval: 10s
      retries: 10
      start_period: 60s
      timeout: 5s

  gateway:
    command: java -jar target/api-gateway-0.0.1-SNAPSHOT.jar
    build:
      context: api-gateway/
      dockerfile: Dockerfile
    ports:
      - 8090:8090
    restart: on-failure
    environment:
      - SPRING_RABBITMQ_HOST=rabbit
    volumes:
      - ./:/app/app
    depends_on:
      rabbit:
        condition: service_healthy

  warehouse:
    container_name: warehouse
    command: java -jar target/demo-0.0.1-SNAPSHOT.jar
    build:
      context: warehouse/
      dockerfile: Dockerfile
    ports:
      - 9001:9001 #host:container
    volumes:
      - ./:/app/app

  productservice:
    container_name: productService
    command: java -jar target/product-0.0.1-SNAPSHOT.jar
    build:
      context: productService/
      dockerfile: Dockerfile
    ports:
      - 9002:9002
    restart: on-failure
    environment:
      - SPRING_RABBITMQ_HOST=rabbit
    volumes:
      - ./:/app/app
    depends_on:
      rabbit:
        condition: service_healthy
      gateway:
        condition: service_started

  priceservice:
    container_name: priceService
    command: java -jar target/PriceService-0.0.1-SNAPSHOT.jar
    build:
      context: priceService/
      dockerfile: Dockerfile
    ports:
      - 9003:9003
    restart: on-failure
    environment:
      - SPRING_RABBITMQ_HOST=rabbit
    volumes:
      - ./:/app/app
    depends_on:
      rabbit:
        condition: service_healthy
      gateway:
        condition: service_started

  currencyservice:
    container_name: currencyService
    command: java -jar target/currency-0.0.1-SNAPSHOT.jar
    build:
      context: currencyService/
      dockerfile: Dockerfile
    ports:
      - 9004:9004
    restart: on-failure
    environment:
      - SPRING_RABBITMQ_HOST=rabbit
    volumes:
      - ./:/app/app
    depends_on:
      rabbit:
        condition: service_healthy
      gateway:
        condition: service_started

#  frontend:
#    command: /bin/sh -c "yarn serve"
#    build:
#      context: frontend/
#      dockerfile: Dockerfile
#    ports:
#      - 8081:8081
#    restart: on-failure
#    volumes:
#      - ./:/app
#      - node_modules:/app/node_modules
#      - dist:/app/dist